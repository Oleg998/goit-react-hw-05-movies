{"version":3,"file":"static/js/388.885ae890.chunk.js","mappings":"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","sources":["components/Api/api.js","webpack://react-homework-template/./src/pages/NotFound/NotFound.module.css?7579","pages/NotFound/NotFound.jsx","webpack://react-homework-template/./src/pages/SingleMoviesPageCoast/singleMoviesPageCoast.module.css?2b5e","pages/SingleMoviesPageCoast/SingleMoviesPageCoast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '4b0d88e4e438af6c90a79ac0bd3bce13';\nconst END_POINT = 'trending/movie/day';\n\nexport const getTrendig = () => {\n  return axios.get(`${BASE_URL}${END_POINT}?api_key=${KEY}`);\n};\n\nexport const getMoviesById = id => {\n  return axios.get(`${BASE_URL}movie/${id}?api_key=${KEY}`);\n};\n\nexport const searceMovies = (query, page) => {\n  return axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&&page=${page}`\n  );\n};\n\nexport const getCoastById = id => {\n  return axios.get(`${BASE_URL}movie/${id}/credits?api_key=${KEY}`);\n};\n\nexport const getReviewsById = id => {\n  return axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${KEY}`);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"NotFound_img__jWgJp\",\"error\":\"NotFound_error__hxUbn\"};","import css from \"./NotFound.module.css\"\nimport imgSrc  from \"./error404.png\"\nimport { Link } from \"react-router-dom\"\n\nconst NotFound = ()=> {\n    return (\n          <><div className={css.error}>\n            <img src={imgSrc} alt=\"error\"  className={css.img}/>\n        </div><div className={css.errorMessage}>\n                <h3>Ой! Страница не найдена!</h3>\n                <p>К сожалению мы не можем найти запрошенную вами страницу. Возможно, вы неправильно ввели адрес.</p>\n                <Link to=\"/\">  Go to Home Page</Link>\n            </div></>\n    )\n}\n\nexport default NotFound","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"singleMoviesPageCoast_card__xcUqT\",\"coast_item\":\"singleMoviesPageCoast_coast_item__TP90u\",\"coast_list\":\"singleMoviesPageCoast_coast_list__a2GfO\",\"img_coast\":\"singleMoviesPageCoast_img_coast__hRRIE\",\"titel\":\"singleMoviesPageCoast_titel__BCCX6\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getCoastById } from 'components/Api/api';\n\nimport Loader from 'components/Loader/Loader';\nimport NotFound from 'pages/NotFound/NotFound';\nimport css from './singleMoviesPageCoast.module.css';\nimport defaultImg from './cat.jpg';\n\nconst Coast = () => {\n  const [coast, setCoast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCoast = async () => {\n      try {\n        const { data } = await getCoastById(id);\n        setCoast(data.cast);\n        setIsLoading(true);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCoast();\n  }, [id]);\n\n  const imgUrl = 'https://image.tmdb.org/t/p/w440_and_h660_face/';\n\n  const elements = coast.map(({ name, profile_path, cast_id }) => (\n    <li key={cast_id} className={css.coast_item}>\n      <img\n        className={css.img_coast}\n        src={profile_path ? imgUrl + profile_path : defaultImg}\n        alt={name}\n      />\n      <p className={css.titel}>{name}</p>\n    </li>\n  ));\n\n  return (\n    <div>\n      {error && <NotFound></NotFound>}\n      {isLoading && <Loader></Loader>}\n      {!coast.length && (\n        <h2>Sorry, there are no actors in the database for this film.</h2>\n      )}\n      {coast && (\n        <div className={css.card}>\n          <ul className={css.coast_list}>{elements}</ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Coast;\n"],"names":["BASE_URL","KEY","getTrendig","axios","concat","getMoviesById","id","searceMovies","query","page","getCoastById","getReviewsById","_jsxs","_Fragment","children","_jsx","className","css","src","imgSrc","alt","Link","to","_useState","useState","_useState2","_slicedToArray","coast","setCoast","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useParams","useEffect","fetchCoast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getCoastById","data","_context","prev","next","sent","cast","t0","message","finish","stop","apply","arguments","elements","map","_ref2","name","profile_path","cast_id","defaultImg","NotFound","Loader","length"],"sourceRoot":""}